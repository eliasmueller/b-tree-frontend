{"version":3,"sources":["./src/environments/environment.ts","./src/app/tree-display/tree-display.component.ts","./src/app/tree-display/tree-display.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/tree.ts","./src/app/ui/ui.component.ts","./src/app/ui/ui.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, ElementRef, OnInit, ViewChild, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {Tree} from '../tree';\nimport {Node} from '../node';\nimport { UiComponent } from '../ui/ui.component';\nimport * as uuid from 'uuid';\n\n@Component({\n  selector: 'app-tree-display',\n  templateUrl: './tree-display.component.html',\n  styleUrls: ['./tree-display.component.css']\n})\n\n/**\n * This class is responsible for transforming the b-tree from the JSON-Format to a visual representation in HTML using the HTML canvas.\n */\nexport class TreeDisplayComponent implements OnInit, OnChanges {\n\n\n  @ViewChild('canvas', {static: true})\n  canvas: ElementRef<HTMLCanvasElement>;\n\n  @Input() childTree: Tree;\n  @Input() highlighted: uuid;\n\n  private bTree: Tree;\n  canvasWidth: number;\n  canvasHeight: number;\n  private firstElementsInRow: Node[] = [];\n  private numberNodesInRow: number[] = [];\n  private nodeXPositionLookupTable: number[] = [];\n  private nodeYPositionLookupTable: number[] = [];\n  private ctx: CanvasRenderingContext2D;\n\n  constructor( private data: UiComponent) {\n  }\n\n  /**\n   * On change of the tree the tree gets transformed to a Tree-Object, the canvas gets initialized and the draw-method gets called.\n   * @param changes: The changes Interface that fetches if the childTree-attribute did change.\n   */\n  async ngOnChanges(changes: SimpleChanges): Promise<void> {\n    if ( this.childTree !=  null ) {\n      this.bTree = this.childTree;\n      await this.initCanvas();\n      await this.setTreeMetrics();\n      await this.drawTree();\n    }\n  }\n\n  async ngOnInit(): Promise<void> {}\n\n  /**\n   * This method initializes the canvas based on the number of elements in the tree.\n   */\n  private async initCanvas(): Promise<void> {\n    this.canvasHeight = this.bTree.Height * 130;\n    this.canvasWidth = this.bTree.NumberLeaves * (this.bTree.Order - 1) * 40 + 100;\n\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.ctx.stroke();\n  }\n\n  /**\n   * This method draws the actual representation of the tree.\n   * First, it iterates threw the arrays that describe the dimensions of the tree, and creates a rectangle for every node.\n   * Into this rectangle will be written the elements of the node, additionally the positions of the rectangle get saved.\n   *\n   * After all rectangles have been created, the edges will be drawn, based on the position of the elements, and the nodes where\n   * they are pointing to. Therefore, the method iterates over all nodes and elements of the nodes and draws a line if a left or\n   * right reference is there. The positions to draw the lines to are taken out of the node position lookup tables.\n   */\n  private async drawTree(): Promise<void> {\n    if (this.bTree.Nodes != null) {\n      let nodeIndex = 0;\n      const width = (this.bTree.Order - 1) * 32;\n      for (let i = 0; i < this.bTree.Height; i++) {\n        for (let j = 0; j < this.numberNodesInRow[i]; j++) {\n          const x = (j * width) + (j + 1) * (((this.canvasWidth) - width * this.numberNodesInRow[i]) / (this.numberNodesInRow[i] + 1));\n          const y = i * 130 + 50;\n          if (this.highlighted === this.bTree.Nodes[nodeIndex].UUID) {\n            this.ctx.fillStyle = '#42d232';\n          } else {\n            this.ctx.fillStyle = '#369';\n          }\n\n          this.ctx.fillRect(x, y, width, 30);\n\n          this.nodeXPositionLookupTable[nodeIndex] = x;\n          this.nodeYPositionLookupTable[nodeIndex] = y;\n\n          this.ctx.fillStyle = 'white';\n          this.ctx.font = '25px helvetica';\n          for (let k = 0; k < this.bTree.Nodes[nodeIndex].Elements.length; k++) {\n            this.ctx.fillText(String(this.bTree.Nodes[nodeIndex].Elements[k].Value), x + 5 + k * 30, y + 23, 25);\n          }\n          ++nodeIndex;\n        }\n      }\n      this.ctx.fillStyle = 'black';\n      for (let i = 0; i < this.bTree.Nodes.length; i++) {\n        for (let k = 0; k < this.bTree.Nodes[i].Elements.length; k++) {\n          if (this.bTree.Nodes[i].Elements[k].Left != null) {\n            this.ctx.moveTo(this.nodeXPositionLookupTable[i] + 5 + k * 30, this.nodeYPositionLookupTable[i] + 30);\n            const endNodeIndex = this.bTree.Nodes.findIndex(n => n.UUID === this.bTree.Nodes[i].Elements[k].Left);\n            this.ctx.lineTo(this.nodeXPositionLookupTable[endNodeIndex] + width / 2, this.nodeYPositionLookupTable[endNodeIndex]);\n          }\n          if (this.bTree.Nodes[i].Elements[k].Right != null) {\n            this.ctx.moveTo(this.nodeXPositionLookupTable[i] + 35 + k * 30, this.nodeYPositionLookupTable[i] + 30);\n            const endNodeIndex = this.bTree.Nodes.findIndex(n => n.UUID === this.bTree.Nodes[i].Elements[k].Right);\n            this.ctx.lineTo(this.nodeXPositionLookupTable[endNodeIndex] + width / 2, this.nodeYPositionLookupTable[endNodeIndex]);\n          }\n        }\n      }\n      this.ctx.stroke();\n    }\n  }\n\n\n  /**\n   * This method extracts the first element of each row and counts the elements per row, to use this metrics for drawing the tree.\n   */\n  private async setTreeMetrics(): Promise<void> {\n    this.resetTreeMetrics();\n\n    let i = 0; // RowIterator\n    let j = 1; // NodeIterator\n    let k = 1;\n    if (this.bTree.Nodes != null) {\n      if (this.bTree.Nodes.length > 0) {\n        // Adding the root\n        this.firstElementsInRow[0] = this.bTree.Nodes[0];\n\n        if (this.bTree.Nodes.length > 1) {\n          while (this.bTree.Nodes[j - 1].Elements[0].Left != null) {\n            // Start new row\n            if (this.firstElementsInRow[i].Elements[0].Left === this.bTree.Nodes[j].UUID) {\n              this.firstElementsInRow.push(this.bTree.Nodes[j]);\n              this.numberNodesInRow[i] = k;\n              ++i;\n              k = 0;\n            }\n            ++j;\n            ++k;\n          }\n          this.numberNodesInRow.push(this.bTree.NumberLeaves);\n        } else {\n          this.numberNodesInRow.push(1);\n        }\n      }\n    }\n  }\n\n  private resetTreeMetrics(): void {\n    this.numberNodesInRow = [];\n    this.firstElementsInRow = [];\n  }\n}\n\n\n","<br/>\n<canvas #canvas width={{canvasWidth}} height={{canvasHeight}} style=\"border: 0px solid #000000;\"></canvas>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'B-Baum';\n}\n","<div class=\"globalOffset\">\r\n  <h1>B-Baum</h1>\r\n  <app-ui></app-ui>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport 'reflect-metadata';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { TreeDisplayComponent } from './tree-display/tree-display.component';\nimport { UiComponent } from './ui/ui.component';\nimport {FormsModule} from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TreeDisplayComponent,\n    UiComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatProgressSpinnerModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Node } from './node';\r\n\r\nexport class Tree {\r\n  Order: number;\r\n  Height: number;\r\n  NumberLeaves: number;\r\n  Nodes: Node[];\r\n}\r\n","import {Component, Injectable, OnInit, ViewChild} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Tree} from '../tree';\r\nimport * as uuid from 'uuid';\r\n\r\nimport {catchError, timeout} from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n@Component({\r\n  selector: 'app-ui',\r\n  templateUrl: './ui.component.html',\r\n  styleUrls: ['./ui.component.css']\r\n})\r\nexport class UiComponent implements OnInit {\r\n\r\n  private port = '8080';\r\n  private url = 'http://localhost:' + this.port + '/api';\r\n  private timeoutInterval = 6000;\r\n\r\n  @ViewChild('csvReader') csvReader: any;\r\n\r\n  numberListInput = '';\r\n  minRandomInput = '';\r\n  maxRandomInput = '';\r\n  numberRandomInput = '';\r\n  sleepTimeInput = '';\r\n  orderInput = '';\r\n  consoleOutput = '';\r\n\r\n  private verbString = '';\r\n  private csvValues = [];\r\n  private values = [];\r\n\r\n  public highlighted: uuid;\r\n  public load = false;\r\n\r\n  public currentTree = new Tree();\r\n\r\n  private treeArray = [];\r\n  private arrayIterator = 0;\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.resetTreeInBackend();\r\n    this.initUi();\r\n    this.currentTree.Order = 5;\r\n  }\r\n\r\n  /**\r\n   * The following methods create the http-calls against the REST-Api and will be getting\r\n   * called by the UI-Elements in the ui.component.html-file.\r\n   */\r\n\r\n  /**\r\n   * This method gets called when new Elements should be added. It consumes them from the getNumberListInput()-method and resolves\r\n   * the http-request with calling resolveAddDeleteHttpRequest() method.\r\n   */\r\n  public async addElements(): Promise<void> {\r\n    this.consoleOutput = '';\r\n    this.highlighted = null;\r\n\r\n    const numberArray = this.getNumberListInput();\r\n    if (numberArray.length < 1) {\r\n      return;\r\n    }\r\n\r\n    const answer = this.httpClient.post(this.url + '', numberArray);\r\n\r\n    this.resolveAddDeleteHttpRequest(answer);\r\n  }\r\n\r\n  /**\r\n   * This method gets called when Elements should be removed. It consumes them from the getNumberListInput()-method and resolves\r\n   * the http-request with calling resolveAddDeleteHttpRequest() method.\r\n   */\r\n  public deleteElements(): void {\r\n    this.consoleOutput = '';\r\n    this.highlighted = null;\r\n\r\n    const numberArray = this.getNumberListInput();\r\n    if (numberArray.length < 1) {\r\n      return;\r\n    }\r\n\r\n    const answer = this.httpClient.request('delete', this.url + '', {body: numberArray});\r\n    this.resolveAddDeleteHttpRequest(answer, true);\r\n  }\r\n\r\n  /**\r\n   * This method gets called when a httpRequest for adding or deleting elements to/from the tree is pending.\r\n   * It either times out or saves the array of trees which represent the single adding / removing steps.\r\n   * After that it replaces this.currentTree with the first element of the treeArray, which triggers a UI reload\r\n   * in tree-display.component.ts class that will draw the tree.\r\n   * If the treeArray contains more than one element, this method calls the disableAllButtonsButNextStep()-method,\r\n   * which disables all UI-Elements but the next step button to iterate over the single adding / removing steps.\r\n   *\r\n   * @param answer: The Observable<any> observing the http request.\r\n   * @param deleted: Boolean, whether delete or add method calls this method.\r\n   * @param changedOrder: Boolean, wheter changeOrder called this method.\r\n   */\r\n  private resolveAddDeleteHttpRequest(answer: Observable<any>, deleted: boolean = false, changedOrder = false): void {\r\n    this.load = true;\r\n    answer.pipe(timeout(this.timeoutInterval), catchError(() => {\r\n      this.consoleOutput = 'Verbindung fehlgeschlagen';\r\n      this.load = false;\r\n      return answer;\r\n    })).subscribe(data => {\r\n\r\n      this.load = false;\r\n      this.enableAllButtonsButNextStep();\r\n      this.treeArray = JSON.parse(data.Trees);\r\n      this.values = JSON.parse(data.Values);\r\n      this.verbString = deleted ? 'gelöscht.' : 'eingefügt.';\r\n\r\n      /* true, when more than one element got added/removed */\r\n      if (this.treeArray.length > 1) {\r\n        if (this.consoleOutput !== '') {\r\n          this.consoleOutput = this.consoleOutput + '\\n' + this.values[this.arrayIterator] + ' wird ' + this.verbString;\r\n        } else {\r\n          this.consoleOutput = this.values[this.arrayIterator] + ' wird ' + this.verbString;\r\n        }\r\n        this.disableAllButtonsButNextStep();\r\n      }\r\n\r\n      /* true when one element gets added/removed */\r\n      else if (this.treeArray.length === 1 && !changedOrder) {\r\n        this.currentTree = this.treeArray[0] as Tree;\r\n        if (this.currentTree.Nodes.length < 1) {\r\n          this.initUi();\r\n        }\r\n      }\r\n\r\n      /* true when changeOrder called this method */\r\n      else if (changedOrder) {\r\n        this.currentTree = this.treeArray[0] as Tree;\r\n        if (this.currentTree.Nodes.length < 1) {\r\n          this.initUi();\r\n        }\r\n        this.consoleOutput = this.consoleOutput + 'Die Ordnung wurde zu ' + this.currentTree.Order + ' verändert.';\r\n      }\r\n\r\n      /* true when no element could be added/removed */\r\n      else {\r\n        this.consoleOutput = this.consoleOutput + 'Es wurden keine Elemente ' + this.verbString;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method gets called when an element is searched. It consumes them from the getNumberListInput()-method to get the element\r\n   * to search after. This cannot be more than one element. It resolves the http-Request itself and prints out if the element has\r\n   * been found, or not and at which search cost. Further, it changes the highlighted-attribute, which is injected in the\r\n   * tree-display-component.ts class. This will trigger a UI-Reload in this class and highlights the node containing the searched element.\r\n   */\r\n  public searchElement(): void {\r\n    this.consoleOutput = '';\r\n    this.highlighted = null;\r\n\r\n    const numberArray = this.getNumberListInput();\r\n    if (numberArray.length < 1 || numberArray.length > 1) {\r\n      if (numberArray.length > 1) {\r\n        this.consoleOutput = 'Es kann nur nach einer Zahl gesucht werden.';\r\n      }\r\n      return;\r\n    }\r\n\r\n    const answer = this.httpClient.post(this.url + '/search', numberArray[0]);\r\n\r\n    this.load = true;\r\n    answer.pipe(timeout(this.timeoutInterval), catchError(() => {\r\n      this.consoleOutput = 'Verbindung fehlgeschlagen.';\r\n      this.load = false;\r\n      return answer;\r\n    })).subscribe((data) => {\r\n      this.load = false;\r\n      // @ts-ignore\r\n      if (data.Highlighted === null) {\r\n        // @ts-ignore\r\n        this.consoleOutput = 'Nicht gefunden.\\nKosten:' + data.Costs;\r\n      } else {\r\n        // @ts-ignore\r\n        this.consoleOutput = 'Gefunden.\\nKosten:' + data.Costs;\r\n        // @ts-ignore\r\n        this.highlighted = data.Highlighted;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method gets called when Elements should be added randomly. It consumes min, max and number of random values from\r\n   * the getRandomInputs()-method. The http-request will be resolved with calling resolveAddDeleteHttpRequest() method.\r\n   */\r\n  public addRandomElements(): void {\r\n    this.consoleOutput = '';\r\n    this.highlighted = null;\r\n\r\n    const randomValues = this.getRandomInputs();\r\n\r\n    if (randomValues.length < 3) {\r\n      return;\r\n    }\r\n\r\n    if (randomValues[0] == null || randomValues[1] == null || randomValues[2] == null) {\r\n      return;\r\n    }\r\n\r\n    if (randomValues[2] < randomValues[0]) {\r\n      this.consoleOutput = 'Das Maximum muss größer als das Minimum sein';\r\n      return;\r\n    }\r\n\r\n    if (randomValues[2] - randomValues[0] + 1 < randomValues[1]) {\r\n      this.consoleOutput = 'Da Duplikate verboten sind, können für diese Min-Max-Range nur '\r\n        + (randomValues[2] - randomValues[0] + 1) + ' Zufallswerte generiert werden.\\n';\r\n    }\r\n\r\n    const answer = this.httpClient.post(this.url + '/random', randomValues);\r\n\r\n    this.resolveAddDeleteHttpRequest(answer);\r\n  }\r\n\r\n  /**\r\n   * This method gets called when the order of the b-tree should be changed. It consumes the order-value and trims it itself.\r\n   * The http-request will be resolved with calling resolveAddDeleteHttpRequest() method.\r\n   */\r\n  public changeOrder(): void {\r\n    this.consoleOutput = '';\r\n    this.highlighted = null;\r\n\r\n    this.orderInput = this.orderInput.replace(/ /g, '');\r\n    const temp = this.orderInput.match(/\\d+/g);\r\n    const orderValue = this.matchInput(temp);\r\n\r\n    if (orderValue === null) {\r\n      return;\r\n    } else if (orderValue < 3) {\r\n      this.consoleOutput = 'Die Ordnung muss mindestens 3 betragen!';\r\n    } else {\r\n      const answer = this.httpClient.post(this.url + '/changeOrder', orderValue);\r\n      this.resolveAddDeleteHttpRequest(answer, false, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method gets called when the nextStep-UI-Button is pressed or through the nextStepAutomation-Function.\r\n   * It iterates over the treeArray and sets the currentTree-Attribute\r\n   * to the value of the treeArray, the iterator is on, what calls a refresh of the visual tree-representation in the\r\n   * tree-display.component.ts-class, where the currentTree is injected into.\r\n   * This method has to be called as many times as the treeArrays length, to call the\r\n   * enableAllButtonsButNextStep()-method and enable the UI-Elements again.\r\n   *\r\n   * @param calledFromAuto: Boolean that represents if method was called manually or from automation\r\n   */\r\n  public nextStep(calledFromAuto = false): void {\r\n    this.consoleOutput = '';\r\n    this.highlighted = null;\r\n\r\n    this.currentTree = this.treeArray[this.arrayIterator];\r\n    this.arrayIterator++;\r\n    if (this.arrayIterator >= this.treeArray.length) {\r\n      this.enableAllButtonsButNextStep();\r\n      this.consoleOutput = this.treeArray.length + ' Werte wurden ' + this.verbString;\r\n      if (!calledFromAuto) {\r\n        this.arrayIterator = 0;\r\n      }\r\n      if (this.currentTree.Nodes.length < 1) {\r\n        this.initUi();\r\n      }\r\n      return;\r\n    }\r\n    this.consoleOutput = this.values[this.arrayIterator] + ' wird ' + this.verbString;\r\n  }\r\n\r\n  /**\r\n   * This method calls the nextStep()-Method automatically and periodically to add all new elements automated.\r\n   * Global sleepTimeInput-Variable defines how long the UI waits between adding a new element.\r\n   * If sleepTimeInput is 0, it just skips the iterative adding and sets the currentTree to the last element of the treeArray.\r\n   */\r\n  public async nextStepAutomation(): Promise<void> {\r\n\r\n    let sleepTime;\r\n    if (this.sleepTimeInput !== '') {\r\n      this.sleepTimeInput = this.sleepTimeInput.replace(/ /g, '');\r\n      const temp = this.sleepTimeInput.match(/\\d+/g);\r\n      sleepTime = this.matchInput(temp);\r\n    } else {\r\n      sleepTime = 0;\r\n    }\r\n\r\n    if (sleepTime > 0) {\r\n      while (this.arrayIterator < this.treeArray.length) {\r\n        this.nextStep(true);\r\n        await this.delay(sleepTime);\r\n      }\r\n      this.arrayIterator = 0;\r\n    } else {\r\n      this.currentTree = this.treeArray[this.treeArray.length - 1];\r\n      this.consoleOutput = this.treeArray.length + ' Werte wurden ' + this.verbString;\r\n      this.enableAllButtonsButNextStep();\r\n      this.arrayIterator = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Works as a asynchronous wait method\r\n   * @param ms: the time to wait\r\n   */\r\n  public async delay(ms: number): Promise<any> {\r\n    return new Promise( resolve => setTimeout(resolve, ms) );\r\n  }\r\n\r\n\r\n  /**\r\n   * This method gets called when CSV already has been read and creates the http-request to add the csv-files values to the tree.\r\n   * The http-request will be resolved by calling resolveAddDeleteHttpRequest()-method.\r\n   */\r\n  public readCSV(): void {\r\n    this.consoleOutput = '';\r\n    this.highlighted = null;\r\n\r\n    if (this.csvValues[0] == null) {\r\n      this.consoleOutput = 'Keine korrekten Daten aus einer CSV eingelesen.';\r\n      return;\r\n    }\r\n    const answer = this.httpClient.post(this.url + '', this.csvValues);\r\n    this.resolveAddDeleteHttpRequest(answer);\r\n  }\r\n\r\n  /**\r\n   * This method gets called when the user uploads a CSV-file. It calls isValidCSVFile() to validate the file is a CSV file.\r\n   * If it's a valid file, the method trims the elements of the CSV-file into an Array of numbers, called this.csvValues.\r\n   * If it's not a valid file, it calls fileReset to reset the input-buffer for CSV-Files.\r\n   *\r\n   * @param $event: the UI-event triggering this method.\r\n   */\r\n  uploadListener($event: any): void {\r\n    this.consoleOutput = '';\r\n    this.highlighted = null;\r\n\r\n    const files = $event.target.files;\r\n    if (this.isValidCSVFile(files[0])) {\r\n      const input = $event.target;\r\n      const reader = new FileReader();\r\n      reader.readAsText(input.files[0]);\r\n\r\n      reader.onload = () => {\r\n        const csvData = reader.result;\r\n        const csvRecordsArray = (csvData as string).split(/\\r\\n|\\n/);\r\n        const tempString = csvRecordsArray[0].replace(/ /g, '');\r\n        const temp = tempString.match(/\\d+/g);\r\n        if (temp != null) {\r\n          this.csvValues = temp.map(Number);\r\n        } else {\r\n          this.consoleOutput = 'Die CSV enthält keine gültigen Zahlen.';\r\n          return;\r\n        }\r\n        this.consoleOutput = 'Die Werte der CSV lauten: \\n' + tempString + '\\nBestätige mit CSV Bestätigen.';\r\n      };\r\n\r\n    } else {\r\n      alert('Please import valid .csv file.');\r\n      this.fileReset();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates it the file is a CSV-File.\r\n   *\r\n   * @param file: The file to validate.\r\n   */\r\n  private isValidCSVFile(file: any): boolean {\r\n    return file.name.endsWith('.csv');\r\n  }\r\n\r\n  /**\r\n   * Resets the CSV-Readers buffer.\r\n   */\r\n  private fileReset(): void {\r\n    this.csvReader.nativeElement.value = '';\r\n  }\r\n\r\n  private resetTreeInBackend(): void {\r\n    this.consoleOutput = '';\r\n    this.highlighted = null;\r\n\r\n    const answer = this.httpClient.get(this.url + '/reset');\r\n    answer.pipe(timeout(this.timeoutInterval), catchError(() => {\r\n      this.consoleOutput = 'Verbindung fehlgeschlagen.';\r\n      this.load = false;\r\n      return answer;\r\n    })).subscribe((data) => {\r\n        this.load = false;\r\n        this.consoleOutput = 'Verbindung hergestellt.';\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Reads the input field for adding, removing or searching numbers and converts to number-array.\r\n   * @return An array of input numbers.\r\n   */\r\n  private getNumberListInput(): number[] {\r\n    this.numberListInput = this.numberListInput.replace(/ /g, '');\r\n    const temp = this.numberListInput.match(/\\d+/g);\r\n    this.numberListInput = '';\r\n    if (temp != null) {\r\n      return temp.map(Number);\r\n    } else {\r\n      this.consoleOutput = 'Die Eingabe enthält kein gültigen Zahlen.';\r\n      return [] as number[];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transforms the random input parameters (min, max, number) and trims them to numbers.\r\n   * @return: The array containing the trimmed input parameters.\r\n   */\r\n  private getRandomInputs(): number[] {\r\n    const inputValues = [];\r\n\r\n    this.minRandomInput = this.minRandomInput.replace(/ /g, '');\r\n    let temp = this.minRandomInput.match(/\\d+/g);\r\n    inputValues[0] = this.matchInput(temp);\r\n\r\n    this.maxRandomInput = this.maxRandomInput.replace(/ /g, '');\r\n    temp = this.maxRandomInput.match(/\\d+/g);\r\n    inputValues[2] = this.matchInput(temp);\r\n\r\n    this.numberRandomInput = this.numberRandomInput.replace(/ /g, '');\r\n    temp = this.numberRandomInput.match(/\\d+/g);\r\n    inputValues[1] = this.matchInput(temp);\r\n\r\n    this.numberRandomInput = '';\r\n    this.minRandomInput = '';\r\n    this.maxRandomInput = '';\r\n\r\n    return inputValues;\r\n  }\r\n\r\n  /**\r\n   * Matches the RegularExpression against a number value, if possible maps it to a number.\r\n   * @param temp: The RegExpMatchArray to get the first number value from.\r\n   */\r\n  private matchInput(temp: RegExpMatchArray): number {\r\n    if (temp != null) {\r\n      return temp.map(Number)[0];\r\n    } else {\r\n      this.consoleOutput = 'Die Eingabe enthält keine gültigen Zahlen.';\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disables all UI-Elements but the NextStepButton, The Auto-Step-Button and the sleepTimeInputButton.\r\n   */\r\n  private disableAllButtonsButNextStep(): void {\r\n    const button = document.querySelectorAll('button');\r\n    for (let i = 0; i < button.length; i++) {\r\n      button[i].disabled = true;\r\n    }\r\n    const input = document.querySelectorAll('input');\r\n    for (let i = 0; i < input.length; i++) {\r\n      input[i].disabled = true;\r\n    }\r\n    button[button.length - 2].disabled = false;\r\n    button[button.length - 3].disabled = false;\r\n    input[input.length - 2].disabled = false;\r\n  }\r\n\r\n  /**\r\n   * Enables all UI-Element but the NextStepButton, The Auto-Step-Button and the sleepTimeInputButton.\r\n   */\r\n  private enableAllButtonsButNextStep(): void {\r\n    const button = document.querySelectorAll('button');\r\n    for (let i = 0; i < button.length; i++) {\r\n      button[i].disabled = false;\r\n    }\r\n    const input = document.querySelectorAll('input');\r\n    for (let i = 0; i < input.length; i++) {\r\n      input[i].disabled = false;\r\n    }\r\n    button[button.length - 2].disabled = true;\r\n    button[button.length - 3].disabled = true;\r\n    input[input.length - 2].disabled = true;\r\n  }\r\n\r\n  /**\r\n   * Disables Search and Remove button, called on init or if the tree is empty.\r\n   */\r\n  private initUi(): void {\r\n    const button = document.querySelectorAll('button');\r\n    button[1].disabled = true;\r\n    button[2].disabled = true;\r\n\r\n  }\r\n\r\n\r\n}\r\n","<ng-template #blur>\n  <div class = \"fadeMe\">\n    <mat-spinner color=\"accent\" class=\"activityIndicator\"></mat-spinner>\n  </div>\n</ng-template>\n<div *ngIf=\"load == false; else blur\">\n</div>\n  <div class=\"left\" xmlns=\"http://www.w3.org/1999/html\">\n    <div>\n      <input id=\"numberInput\" [(ngModel)]=\"numberListInput\" class=\"bigInput\" type=\"text\" value=\"\"\n             placeholder=\"1, 2, ...\">\n      <div>\n        <button id=\"addButton\" class=\"addButton\" (click)=\"addElements()\">+</button>\n        <button id=\"removeButton\" (click)=\"deleteElements()\" class=\"addButton\">-</button>\n        <button id=\"searchButton\" (click)=\"searchElement()\" class=\"searchButton\">Suchen</button>\n      </div>\n    </div>\n\n    <br/>\n\n    <div>\n      <input id=\"minRandom\" [(ngModel)]=\"minRandomInput\" type=\"text\" class=\"smallInput\" value=\"\" placeholder=\"Min\">\n      <input id=\"maxRandom\" [(ngModel)]=\"maxRandomInput\" type=\"text\" class=\"smallInput\" value=\"\" placeholder=\"Max\">\n      <input id=\"numberRandom\" [(ngModel)]=\"numberRandomInput\" type=\"text\" class=\"smallInput\" value=\"\" placeholder=\"Anz\">\n      <button id=\"addRandomButton\" class=\"randomButton\" (click)=\"addRandomElements()\">+ Zfll.</button>\n    </div>\n\n    <br/>\n\n    <div>\n      <input type=\"text\" id=\"orderInput\" [(ngModel)]=\"orderInput\" class=\"smallInput\" value=\"\"\n             placeholder={{currentTree.Order}}>\n      <button id=\"changeOrderButton\" (click)=\"changeOrder()\">Ordnung Verändern</button>\n    </div>\n\n    <br/>\n\n    <div>\n      <textarea class=\"outPut\" [(ngModel)]=\"consoleOutput\" value=\"\" rows=\"5\" placeholder=\"> Ausgabe\"></textarea>\n    </div>\n\n    <br/>\n\n    <div>\n      <button class=\"nextStepButton\" (click)=\"nextStep()\" disabled>Nächster Schritt</button>\n    </div>\n    <div>\n      <button class=\"searchButton\" (click)=\"nextStepAutomation()\" disabled>Auto-Step</button>\n      <input type=\"text\" id=\"sleepTimeInput\" [(ngModel)]=\"sleepTimeInput\" class=\"sleepInput\" value = \"\" placeholder=\"0ms\" disabled>\n    </div>\n    <br/>\n    <div>\n      <input type=\"file\" id=\"csvInput\" class=\"inputFile\" name=\"csvInput\" (change)=\"uploadListener($event)\" accept=\".csv\" />\n      <label for=\"csvInput\" class=\"label\">CSV Auswählen\n      </label>\n    </div>\n    <div>\n      <button class=\"nextStepButton\" (click)=\"readCSV()\">CSV Bestätigen</button>\n    </div>\n    <br/>\n\n  </div>\n  <div class=\"outer\">\n    <div class=\"right\">\n      <app-tree-display [childTree]=\"currentTree\" [highlighted]=\"highlighted\"></app-tree-display>\n    </div>\n  </div>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}